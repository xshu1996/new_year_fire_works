[1,["ecpdLyjvZBwrvm+cedCcQy","41D7kWhyFGY7q4NDlzkazn","2bLRGt3NNLgZCqfRV2lVyU","31vIlawANFZqnzLlSuHBfc","1fmiprBoZCzKUGLJPCAd6V","04QjA+4r9OBJhBFLgMoqh8","6aoKpq6+5BVaCIpoemqt7E","a8Anh32NZGRZegUtSgEj26"],["node","_spriteFrame","_textureSetter","root","data","_effectAsset","scene","_parent","dot_prefab"],[["cc.Node",["_name","_groupIndex","_id","_active","_components","_trs","_parent","_contentSize","_children","_color","_prefab","_anchorPoint"],-1,9,7,1,5,2,5,4,5],["cc.Sprite",["_sizeMode","_type","node","_materials","_spriteFrame"],1,1,3,6],"cc.SpriteFrame",["cc.Widget",["_alignFlags","alignMode","_originalWidth","_originalHeight","node"],-1,1],["cc.Camera",["_cullingMask","_clearFlags","_orthoSize","_nearClip","_alignWithScreen","_depth","node","_backgroundColor"],-3,1,5],["cc.Label",["_N$horizontalAlign","_N$verticalAlign","_N$overflow","_string","node","_materials"],-1,1,3],["cc.Prefab",["_name"],2],["cc.PrefabInfo",["root"],3,1],["cc.Material",["_name","_techniqueData"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Canvas",["_fitWidth","_fitHeight","node","_designResolution"],1,1,5],["e1b90/rohdEk4SdmmEZANaD",["node","dot_prefab"],3,1,6],["cc.Scene",["_name","_active","_children","_anchorPoint","_trs"],1,2,5,7]],[[0,0,6,4,7,5,2],[1,0,2,3,4,2],[1,2,3,1],[6,0,2],[0,0,1,4,10,7,3],[0,0,2,8,4,9,7,5,3],[0,0,6,4,9,7,2],[0,0,1,6,8,4,5,3],[0,0,1,6,8,5,3],[0,0,6,4,5,2],[0,0,3,6,4,7,5,3],[0,0,6,4,7,11,5,2],[0,0,1,6,4,7,5,3],[0,0,6,4,9,7,5,2],[1,1,0,2,3,4,3],[1,2,3,4,1],[7,0,1],[8,0,1,3],[9,0,1,2,4],[10,0,1,3],[11,0,1,2,3,3],[3,0,4,2],[3,1,0,2,3,4,5],[12,0,1,1],[4,0,1,2,3,4,6,7,6],[4,0,1,5,6,4],[13,0,1,2,3,4,3],[5,0,1,2,4,5,4],[5,3,0,1,4,5,4]],[[[[3,"dot"],[4,"dot",1,[[1,0,-2,[0],1]],[16,-1],[5,6,6]]],0,[0,3,1,0,0,1,0,4,1,2],[0,0],[-1,1],[0,1]],[[[17,"模糊",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[5],[2]],[[[18,"模糊",[{"hash":2685974217,"record":null,"name":"模糊|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvec4 getColor(vec2 uv) {\n  vec4 o = vec4(1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, uv);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, uv + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  return o;\n}\nvoid main () {\n  vec2 wh = vec2(195, 270);\n  vec4 o = getColor(v_uv0) * 0.2270270270;\n  vec2 offset = 1.3846153846 / wh;\n  o += (getColor(v_uv0 + vec2(offset.x, 0.0)) + getColor(v_uv0 - vec2(offset.x, 0.0)) + getColor(v_uv0 + vec2(0.0 + offset.y)) + getColor(v_uv0 - vec2(0.0 + offset.y))) * 0.1581081081;\n  offset = 3.2307692308 / wh;\n  o += (getColor(v_uv0 + vec2(offset.x, 0.0)) + getColor(v_uv0 - vec2(offset.x, 0.0)) + getColor(v_uv0 + vec2(0.0 + offset.y)) + getColor(v_uv0 - vec2(0.0 + offset.y))) * 0.03513513515;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvec4 getColor(vec2 uv) {\n  vec4 o = vec4(1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, uv);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, uv + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  return o;\n}\nvoid main () {\n  vec2 wh = vec2(195, 270);\n  vec4 o = getColor(v_uv0) * 0.2270270270;\n  vec2 offset = 1.3846153846 / wh;\n  o += (getColor(v_uv0 + vec2(offset.x, 0.0)) + getColor(v_uv0 - vec2(offset.x, 0.0)) + getColor(v_uv0 + vec2(0.0 + offset.y)) + getColor(v_uv0 - vec2(0.0 + offset.y))) * 0.1581081081;\n  offset = 3.2307692308 / wh;\n  o += (getColor(v_uv0 + vec2(offset.x, 0.0)) + getColor(v_uv0 - vec2(offset.x, 0.0)) + getColor(v_uv0 + vec2(0.0 + offset.y)) + getColor(v_uv0 - vec2(0.0 + offset.y))) * 0.03513513515;\n  o *= v_color;\n  ALPHA_TEST(o);\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]},{"name":"USE_BGRA","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"模糊|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[19,"Main",null],[5,"Canvas","a286bbGknJLZpRpxROV6M94",[-4,-5,-6,-7,-8,-9,-10],[[20,true,false,-1,[5,640,1136]],[21,45,-2],[23,-3,10]],[4,4294769916],[5,640,1136],[320,568,0,0,0,0,1,1,1,1]],[6,"background",1,[[22,0,45,200,150,-11],[14,1,0,-12,[0],1]],[4,4281214491],[5,640,1136]],[7,"midCamera",1,1,[-14],[[24,2,1,720,0.1,false,-13,[4,3741319168]]],[0,0,554.2562584220408,0,0,0,1,1,1,1]],[8,"mid",1,3,[-15,-16],[0,0,-554.25626,0,0,0,1,1,1,1]],[26,"New Node",false,[1],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[9,"Main Camera",1,[[25,1,7,-1,-17]],[0,0,554.2562584220408,0,0,0,1,1,1,1]],[10,"cocos",false,1,[[15,-18,[2],3]],[5,195,270],[0,50,0,0,0,0,1,1,1,1]],[11,"LabBlessing",1,[[27,1,1,3,-19,[4]]],[5,520.1,50.4],[0,0.5,1],[-0.533,415.57,0,0,0,0,1,1,1,1]],[0,"sp",1,[[2,-20,[5]]],[5,640,1440],[0,0,0,0,0,0,1,1,-1,1]],[0,"info",1,[[28,"点击屏幕放烟花",1,1,-21,[6]]],[5,280,50.4],[0,-404.714,0,0,0,0,1,1,1,1]],[12,"sp",1,4,[[2,-22,[7]]],[5,640,1440],[0,0,0,0,0,0,1,1,-1,1]],[13,"rect",4,[[1,0,-23,[8],9]],[4,4278190335],[5,100,100],[438.774,-515.719,0,0,0,0,1,1,1,1]]],0,[0,0,1,0,0,1,0,0,1,0,-1,6,0,-2,2,0,-3,7,0,-4,8,0,-5,9,0,-6,10,0,-7,3,0,0,2,0,0,2,0,0,3,0,-1,4,0,-1,11,0,-2,12,0,0,6,0,0,7,0,0,8,0,0,9,0,0,10,0,0,11,0,0,12,0,6,5,1,7,5,23],[0,0,0,0,0,0,0,0,0,0,0],[-1,1,-1,1,-1,-1,-1,-1,-1,1,8],[0,1,0,3,0,0,0,4,0,1,5]],[[{"name":"HelloWorld","rect":[0,0,195,270],"offset":[0,0],"originalSize":[195,270],"capInsets":[0,0,0,0]}],[2],0,[0],[2],[6]],[[{"name":"white","rect":[0,0,1,1],"offset":[0,0],"originalSize":[1,1],"capInsets":[0,0,0,0]}],[2],0,[0],[2],[7]]]]